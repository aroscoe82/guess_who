{"version":3,"sources":["utils/game.js","components/Levels.js","views/Dashboard.js","components/CountdownTimer.js","components/Clues.js","utils/routes.js","views/Gameboard.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["game","this","levels","code","label","time","clues","randomCharacter","mainCharacters","getMainCharacters","Math","floor","random","length","studentCharacters","getStudentCharacters","characterList","level","characters","filter","character","role","includes","name","Levels","handleSelect","evt","preventDefault","props","setLevel","target","value","gameLevels","items","Object","keys","map","item","className","key","onClick","React","Component","Dashboard","setGameLevel","levelDetail","getLevelDetail","gameCharacter","gameLevel","guessWho","history","push","pathname","state","loading","axios","get","then","response","setCharacters","data","setState","catch","error","getLevels","CountdownTimer","secondsRemaining","tick","clearInterval","timer","gameOver","setInterval","Clues","initialTime","timerRemaining","count","clueInterval","getClues","clueFields","field","index","who","local","assign","ceil","clue","id","answer","path","exact","class","component","gameInfo","undefined","guess","guessHandler","toLowerCase","statusMsg","location","to","type","placeholder","onChange","ErrorBoundary","errorInfo","style","whiteSpace","toString","componentStack","children","Lost","App","interceptors","request","use","config","params","routes","route","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79e3ab83.chunk.js","sourcesContent":["export class game{\n  constructor(){\n    this.levels = {\n      'muggle': {\n        code: 0,\n        label: 'Muggle',\n        time: 90 ,// seconds\n        clues: ['patronus', 'wand', 'boggart', 'bloodStatus'],\n        randomCharacter: () => {\n          let mainCharacters = this.getMainCharacters();\n          return mainCharacters[Math.floor(Math.random() * mainCharacters.length)]\n        }\n      },\n      'wizard': {\n        code: 1,\n        label: 'Wizard',\n        time: 60, // seconds\n        clues: [ 'house', 'bloodStatus', 'orderOfThePhoenix'],\n        randomCharacter: () => {\n          let studentCharacters = this.getStudentCharacters();\n          return studentCharacters[Math.floor(Math.random() * studentCharacters.length)]\n        }\n      },\n      'auror': {\n        code: 2,\n        label: 'Auror',\n        time: 60, // seconds\n        clues: [ 'house', 'bloodStatus', 'orderOfThePhoenix'],\n        randomCharacter: () => {\n          return this.characterList[Math.floor(Math.random() * this.characterList.length)]\n        }\n      }\n    }\n    this.characterList = [];\n  }\n\n  getLevels(){\n    return this.levels;\n  }\n\n  getLevelDetail(level){\n    return this.levels[level];\n  }\n\n  setCharacters(characters){\n    this.characterList = characters;\n  }\n\n  getAllCharacters(){\n    return this.characterList;\n  }\n\n  getStudentCharacters(){\n    return this.characterList.filter(character => (\n      character.role === 'student'\n    ));\n  }\n\n  getMainCharacters(){\n    let mainCharacters = [\n      'Harry Potter', 'Ronald Weasley', 'Hermione Granger', 'Neville Longbottom', 'Luna Lovegood'\n    ];\n\n    return this.characterList.filter((character) => {\n      return mainCharacters.includes(character.name);\n    });\n  }\n}","import React from 'react';\n\nexport default class Levels extends React.Component{\n  handleSelect = (evt) => {\n    evt.preventDefault();\n    this.props.setLevel(evt.target.value);\n  }\n\n  render(){\n    const levels = this.props.gameLevels;\n    const items = Object.keys(levels).map((item) =>\n      <button className=\"btn-default level-option\" key={'level-' + levels[item].code} value={item} onClick={this.handleSelect}>{levels[item].label}</button>\n    );\n\n    return (\n      <div className=\"level-options\">\n        {items}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport axios from 'axios';\nimport { game } from '../utils/game';\n\nimport Levels from '../components/Levels';\n\nexport default class Dashboard extends React.Component{\n  constructor(props){\n    super(props);\n    this.game = new game();\n\n    this.state = {\n      loading: true\n    };\n  }\n\n  setGameLevel = (level) => {\n    const levelDetail = this.game.getLevelDetail(level);\n    const gameCharacter =  levelDetail.randomCharacter();\n\n    const gameLevel = {\n      label: levelDetail.label,\n      time: levelDetail.time,\n      clues: levelDetail.clues,\n      guessWho: gameCharacter\n    }\n\n    this.props.history.push({\n      pathname: '/level/' + levelDetail.code,\n      state: { level: gameLevel}\n    });\n  }\n\n  componentDidMount(){\n    axios.get('https://www.potterapi.com/v1/characters/')\n      .then((response) => {\n        this.game.setCharacters(response.data);\n        this.setState({loading: false})\n      })\n      .catch((error) => {\n        // need to handle error\n      });\n  }\n\n  render(){\n    if(!this.state.loading){  \n      const levels = this.game.getLevels();\n\n      return (\n        <div className=\"dashboard\">\n          <h1 className=\"text-center color-white py-5\">Select A Level</h1>\n          <Levels setLevel={this.setGameLevel} gameLevels={levels} />\n        </div>\n      )  \n    }else{\n      return (\n        <div className=\"dashboard\">\n          <h1 className=\"text-center py-5 color-white\">Loading...</h1>\n        </div>\n      )\n    }\n  }\n}","import React from 'react';\n\nexport default class CountdownTimer extends React.Component{\n  state = {\n    secondsRemaining: 0\n  }\n\n  tick = () => {\n    if (this.state.secondsRemaining) {\n      this.setState({secondsRemaining: this.state.secondsRemaining - 1});\n    }else{\n      clearInterval(this.timer);\n      this.props.gameOver(\"Out of Time\")\n    }\n  };\n\n  componentDidMount(){\n    this.setState({ secondsRemaining: this.props.time }, () => {\n      this.timer = setInterval(this.tick, 1000); // 1000 = 1 second, 60000 = 1 minute\n    });\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.timer);\n  }\n\n  render(){\n    return <span>Time Remaining: {this.state.secondsRemaining}</span>\n  }\n}","import React from 'react';\n\nexport default class Clues extends React.Component{\n  state = {\n    initialTime: 0,\n    timerRemaining: 0,\n    clues: [],\n    count: 0,\n    clueInterval: 0\n  };\n\n  getClues = (clueFields) => {\n    return clueFields.map((field, index) => {\n      return {'id': index, 'label': field, 'answer': this.props.who[field]};\n    });\n  };\n\n  tick = () => {\n    if (this.state.timerRemaining) {\n      let local = Object.assign({}, this.state);\n      local.timerRemaining = local.timerRemaining - 1;\n      if(local.timerRemaining === local.initialTime - ((local.count+1) * local.clueInterval)){\n        local.count+=1;\n      }\n      this.setState({timerRemaining: local.timerRemaining, count: local.count});\n    }else{\n      clearInterval(this.timer);\n    }\n  };\n\n  componentDidMount(){\n    let local = Object.assign({}, this.state);\n    local.clueInterval = Math.ceil(this.props.time/this.props.clues.length);\n    local.clues = this.getClues(this.props.clues);\n    local.initialTime = this.props.time;\n    local.timerRemaining = this.props.time\n\n    this.setState(local, () => {\n      this.timer = setInterval(this.tick, 1000); // 1000 = 1 second, 60000 = 1 minute\n    })\n  }\n  render(){\n    return (\n      <ul className=\"clues\">\n        {\n          this.state.clues.map((clue, index) => {\n            if(clue.id <= this.state.count){\n              return <p className=\"clue\" key={clue.id}>{clue.label}: {clue.answer}</p>\n            }\n          })\n        }\n      </ul>\n    )\n  }\n}","// views\nimport Dashboard from '../views/Dashboard';\nimport Gameboard from '../views/Gameboard';\n\nexport default[\n  {\n    path: '/',\n    exact: true,\n    name: 'Dashboard',\n    class: 'dashboard',\n    component: Dashboard\n  },\n  {\n    path: '/level/:code',\n    exact: true,\n    name: 'Game',\n    class: 'gameboard',\n    component: Gameboard\n  }\n]","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport CountdownTimer from '../components/CountdownTimer';\nimport Clues from '../components/Clues';\n\nexport default class Gameboard extends React.Component{\n  state = {\n    loading: true,\n    gameInfo: undefined,\n    guess: undefined,\n    gameOver: false\n  };\n\n  guessHandler = (evt) => {\n    let entry = evt.target.value;\n\n    if(entry.toLowerCase() === this.state.gameInfo.guessWho.name.toLowerCase()){\n      this.setState({ gameOver: 'You Won!'});\n    }\n  }\n\n  gameOver = (statusMsg) => {\n    this.setState({gameOver: statusMsg});\n  }\n\n  componentDidMount(){\n    this.setState({gameInfo: this.props.location.state.level});\n  }\n\n  render(){\n    if(this.state.gameInfo && !this.state.gameOver){\n      let gameInfo = this.state.gameInfo; \n\n      return (\n        <div className=\"gameboard\">\n          <div className=\"header p-3\">\n            <Link className=\"back-btn\" to={'/'}>Quit</Link>\n            <span className=\"timer text-right\"><CountdownTimer gameOver={this.gameOver} time={gameInfo.time}/></span>\n          </div>\n          <div className=\"game p-3 text-center\">\n            <Clues time={gameInfo.time} clues={gameInfo.clues} who={gameInfo.guessWho} /> \n          </div>\n          <div className=\"entry p-3 text-center\">\n            <input className=\"guessAnswer\" type=\"text\" name=\"guessAnswer\" placeholder=\"Guess\" onChange={this.guess}/>\n          </div>\n        </div>\n      )\n    }\n\n    if(this.state.gameInfo && this.state.gameOver){\n      return(\n        <div className=\"gameboard\">\n          <div className=\"header p-3\">\n            <Link className=\"back-btn\" to={'/'}>Back</Link>\n          </div>\n          <div className=\"game p-3 text-center\">\n            <h1 className=\"mb-5 color-white\">{this.state.gameOver}</h1>\n            <h3>it was {this.state.gameInfo.guessWho.name}</h3>\n            <Link className=\"btn-default btn-lg\" to={'/'}>Play Again</Link>\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"gameboard\"><h1 class=\"text-center color-white py-5\">Loading...</h1></div>\n    )\n  }\n}","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { error: null, errorInfo: null };\n    }\n    \n    componentDidCatch(error, errorInfo) {\n      // Catch errors in any components below and re-render with error message\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      })\n      // You can also log error messages to an error reporting service here\n    }\n    \n    render() {\n      if (this.state.errorInfo) {\n        // Error path\n        return (\n          <div>\n            <h2>Oops - Something went wrong.</h2>\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </details>\n          </div>\n        );\n      }\n      // Normally, just render children\n      return this.props.children;\n    }  \n  }\n\nexport default ErrorBoundary;","import React from 'react';\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport routes from \"./utils/routes\";\n\nimport ErrorBoundary from './components/ErrorBoundary';\n\nimport './scss/App.scss';\n\nfunction Lost(){\n  return <p>You Seem Lost...</p>\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    axios.interceptors.request.use(function (config) {\n      const token = '$2a$10$E69VTQagjnPakm/6NHmCU.IFUteVppxlAL137AkvG7yiQ9/LcPzNe'; // should be send in env\n      config.params =  {key: token};\n      return config;\n    });\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ErrorBoundary>\n        <Router>\n          <Switch>\n            {routes.map((route, index) => {\n              return (\n                <Route\n                  key={index} \n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                />\n              )\n            })}\n            <Route component={Lost} />\n          </Switch>\n        </Router>\n        </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"core-js/stable\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}